{"version":3,"sources":["physics/union-find.js","physics/delaunay.js","components/sidebar/SubMenu.jsx","components/sidebar/SideBar.jsx","algorithms/map_generation/tinykeep/TinyKeepOptions.jsx","physics/CustomRender.js","physics/physics.js","algorithms/map_generation/tinykeep/TinykeepAlgorithm.jsx","physics/kruskal.js","algorithms/map_generation/tinykeep/TinyKeepConstants.js","algorithms/map_generation/tinykeep/TinyKeep.jsx","algorithms/map_generation/tinykeep/TinyKeepVisualizer.jsx","ProceduralGenerationVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["UnionFind","count","this","roots","Array","ranks","i","module","exports","window","proto","prototype","Object","defineProperty","length","makeSet","n","push","find","x","x0","y","link","xr","yr","xd","yd","Delaunay","circumcircle","vertices","j","k","xc","yc","m1","m2","mx1","mx2","my1","my2","dx","dy","x1","y1","x2","y2","x3","y3","fabsy1y2","Math","abs","fabsy2y3","Error","r","dedup","edges","a","b","m","splice","triangulate","key","indices","st","open","closed","c","slice","sort","diff","dmax","xmid","ymid","xmin","Number","POSITIVE_INFINITY","ymin","xmax","NEGATIVE_INFINITY","ymax","max","supertriangle","contains","tri","p","d","u","v","SubMenu","props","toggleParentHover","setState","childHover","parentHover","state","toggleChildHover","toggleNavbar","bind","collapsed","icon","title","items","Nav","Item","className","classNames","Accordion","Toggle","as","Link","variant","eventKey","onClick","onMouseEnter","onMouseLeave","faCaretDown","faCaretUp","Collapse","map","item","href","React","Component","SideBar","isOpen","isMobile","previousWidth","innerWidth","updateWidth","addEventListener","removeEventListener","TinyKeepOptions","handleRoomWidthChange","handleRoomHeightChange","handleStdDeviationChange","handleRadiusChange","handleRoomAmountChange","handleSpeedChange","handleVisualizeButtonClick","roomWidth","onRoomWidthChange","roomHeight","onRoomHeightChange","stdDeviation","onStdDeviationChange","radius","onRadiusChange","roomAmount","onRoomAmountChange","speed","onSpeedChange","onVisualizeButtonClick","parseFloat","Button","toggle","style","color","textAlign","Form","Group","Row","Label","column","sm","paddingLeft","Col","value","onChange","e","target","tooltip","step","CustomRender","Common","Matter","Composite","Bounds","Events","Grid","Vector","Mouse","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","now","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","create","options","defaults","controller","engine","element","canvas","mouse","frameRequestId","width","height","pixelRatio","background","wireframeBackground","hasBounds","bounds","enabled","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","render","extend","_createCanvas","context","getContext","textures","min","setPixelRatio","isElement","appendChild","parentNode","log","run","loop","time","world","stop","_getPixelRatio","setAttribute","lookAt","objects","padding","center","isArray","Infinity","object","position","viewHeight","outerRatio","innerRatio","scaleX","scaleY","setScale","setOffset","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","setTransform","translate","endViewTransform","clear","allBodies","allConstraints","bodies","constraints","currentBackground","_applyBackground","globalCompositeOperation","fillStyle","fillRect","body","overlaps","constraint","bodyA","bodyB","pointAWorld","pointA","pointBWorld","pointB","add","enableSleeping","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","pairs","list","collisions","vertexNumbers","mousePosition","broadphase","grid","debug","event","timestamp","timing","trigger","metrics","debugTimestamp","text","round","fps","extended","delta","toFixed","correction","buckets","broadEff","midEff","narrowEff","debugString","font","split","fillText","visible","start","end","type","beginPath","arc","PI","closePath","moveTo","offset","sub","normal","perp","normalise","coils","ceil","clamp","lineTo","lineWidth","strokeStyle","stroke","anchors","fill","bodyShadows","circleRadius","distanceX","distanceY","distance","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","part","parts","isSleeping","globalAlpha","opacity","sprite","texture","_getTexture","rotate","angle","drawImage","xOffset","xScale","yOffset","yScale","isInternal","rect","axes","axis","positionPrev","id","pair","collision","isActive","activeContacts","vertex","normalPosX","normalPosY","supports","isStatic","penetration","bucketKeys","keys","bucketId","region","parseInt","bucketWidth","bucketHeight","inspector","selected","scale","data","setLineDash","floor","point","selectStart","selectBounds","document","createElement","oncontextmenu","onselectstart","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","imagePath","image","Image","src","cssBackground","test","backgroundSize","getRandomPointInCircle","t","random","cos","sin","normalDistribution","pow","E","sqrt","require","tinyKeep","physicsWorld","rooms","amount","canvasWidth","canvasHeight","room","generateRoom","generateRooms","areaThreshold","forEach","area","getAreaThreshold","mainRooms","selectedRooms","getMainRooms","centerPoints","getCenterPoints","triangles","triangleEdges","getEdgesFromTriangulation","minimumSpanningTree","metric","finalEdge","forest","edgeDist","ind","edge","weight","kruskal","metric_dist","physics","roomBody","Bodies","rectangle","sleepThreshold","World","addBody","getHallways","hallways","path","getPath","getIntersectionsAlongPath","intersections","getRoom","includes","firstRoom","secondRoom","points","yMin","yMax","xMin","xMax","Vertices","steps","RESET","SEPARATING_BODIES","MAIN_ROOMS","TRIANGULATION","MINIMUM_SPANNING_TREE","HALLWAYS","INTERSECTING_ROOMS","HALLWAYS_IMMEDIATE","TinyKeep","Promise","config","cancellation","promises","Engine","positionIterations","gravity","timeScale","customRender","refs","scene","innerHeight","tinyKeepContext","tinykeep","draw","prevProps","reset","onReset","incrementStep","canvasContext","delay","stepString","getStep","off","pop","cancel","clearWorld","secondRun","on","sleeping","filter","drawMainRooms","sleep","then","shift","drawTriangulation","drawMinimumSpanningTree","drawHallways","intersectingRooms","getIntersectingRooms","drawIntersectingRooms","drawHallwaysImmediate","colour","Path2D","thirdRoom","hallway","drawHallway","promise","resolve","ref","TinyKeepVisualizer","handleStep","handleReset","prevState","algorithms","ProceduralGenerationVisualizer","algorithm","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.138187c7.chunk.js","sourcesContent":["/**\n * Taken from: https://github.com/carloscabo/procedural-dungeon-generator/\n */\n\n\"use strict\"; \"use restrict\";\n\n/*\n  Modified by @carloscabo to be used in website\n*/\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = UnionFind;\n} else {\n  window.UnionFind = UnionFind;\n}\n\nfunction UnionFind(count) {\n  this.roots = new Array(count);\n  this.ranks = new Array(count);\n\n  for(var i=0; i<count; ++i) {\n    this.roots[i] = i;\n    this.ranks[i] = 0;\n  }\n}\n\nvar proto = UnionFind.prototype\n\nObject.defineProperty(proto, \"length\", {\n  \"get\": function() {\n    return this.roots.length\n  }\n})\n\nproto.makeSet = function() {\n  var n = this.roots.length;\n  this.roots.push(n);\n  this.ranks.push(0);\n  return n;\n}\n\nproto.find = function(x) {\n  var x0 = x\n  var roots = this.roots;\n  while(roots[x] !== x) {\n    x = roots[x]\n  }\n  while(roots[x0] !== x) {\n    var y = roots[x0]\n    roots[x0] = x\n    x0 = y\n  }\n  return x;\n}\n\nproto.link = function(x, y) {\n  var xr = this.find(x)\n    , yr = this.find(y);\n  if(xr === yr) {\n    return;\n  }\n  var ranks = this.ranks\n    , roots = this.roots\n    , xd    = ranks[xr]\n    , yd    = ranks[yr];\n  if(xd < yd) {\n    roots[xr] = yr;\n  } else if(yd < xd) {\n    roots[yr] = xr;\n  } else {\n    roots[yr] = xr;\n    ++ranks[xr];\n  }\n}","/**\n * Taken from https://github.com/darkskyapp/delaunay-fast\n */\n\nvar Delaunay;\n\n(function() {\n  \"use strict\";\n\n  var EPSILON = 1.0 / 1048576.0;\n\n  function supertriangle(vertices) {\n    var xmin = Number.POSITIVE_INFINITY,\n        ymin = Number.POSITIVE_INFINITY,\n        xmax = Number.NEGATIVE_INFINITY,\n        ymax = Number.NEGATIVE_INFINITY,\n        i, dx, dy, dmax, xmid, ymid;\n\n    for(i = vertices.length; i--; ) {\n      if(vertices[i][0] < xmin) xmin = vertices[i][0];\n      if(vertices[i][0] > xmax) xmax = vertices[i][0];\n      if(vertices[i][1] < ymin) ymin = vertices[i][1];\n      if(vertices[i][1] > ymax) ymax = vertices[i][1];\n    }\n\n    dx = xmax - xmin;\n    dy = ymax - ymin;\n    dmax = Math.max(dx, dy);\n    xmid = xmin + dx * 0.5;\n    ymid = ymin + dy * 0.5;\n\n    return [\n      [xmid - 20 * dmax, ymid -      dmax],\n      [xmid            , ymid + 20 * dmax],\n      [xmid + 20 * dmax, ymid -      dmax]\n    ];\n  }\n\n  function circumcircle(vertices, i, j, k) {\n    var x1 = vertices[i][0],\n        y1 = vertices[i][1],\n        x2 = vertices[j][0],\n        y2 = vertices[j][1],\n        x3 = vertices[k][0],\n        y3 = vertices[k][1],\n        fabsy1y2 = Math.abs(y1 - y2),\n        fabsy2y3 = Math.abs(y2 - y3),\n        xc, yc, m1, m2, mx1, mx2, my1, my2, dx, dy;\n\n    /* Check for coincident points */\n    if(fabsy1y2 < EPSILON && fabsy2y3 < EPSILON)\n      throw new Error(\"Eek! Coincident points!\");\n\n    if(fabsy1y2 < EPSILON) {\n      m2  = -((x3 - x2) / (y3 - y2));\n      mx2 = (x2 + x3) / 2.0;\n      my2 = (y2 + y3) / 2.0;\n      xc  = (x2 + x1) / 2.0;\n      yc  = m2 * (xc - mx2) + my2;\n    }\n\n    else if(fabsy2y3 < EPSILON) {\n      m1  = -((x2 - x1) / (y2 - y1));\n      mx1 = (x1 + x2) / 2.0;\n      my1 = (y1 + y2) / 2.0;\n      xc  = (x3 + x2) / 2.0;\n      yc  = m1 * (xc - mx1) + my1;\n    }\n\n    else {\n      m1  = -((x2 - x1) / (y2 - y1));\n      m2  = -((x3 - x2) / (y3 - y2));\n      mx1 = (x1 + x2) / 2.0;\n      mx2 = (x2 + x3) / 2.0;\n      my1 = (y1 + y2) / 2.0;\n      my2 = (y2 + y3) / 2.0;\n      xc  = (m1 * mx1 - m2 * mx2 + my2 - my1) / (m1 - m2);\n      yc  = (fabsy1y2 > fabsy2y3) ?\n        m1 * (xc - mx1) + my1 :\n        m2 * (xc - mx2) + my2;\n    }\n\n    dx = x2 - xc;\n    dy = y2 - yc;\n    return {i: i, j: j, k: k, x: xc, y: yc, r: dx * dx + dy * dy};\n  }\n\n  function dedup(edges) {\n    var i, j, a, b, m, n;\n\n    for(j = edges.length; j; ) {\n      b = edges[--j];\n      a = edges[--j];\n\n      for(i = j; i; ) {\n        n = edges[--i];\n        m = edges[--i];\n\n        if((a === m && b === n) || (a === n && b === m)) {\n          edges.splice(j, 2);\n          edges.splice(i, 2);\n          break;\n        }\n      }\n    }\n  }\n\n  Delaunay = {\n    triangulate: function(vertices, key) {\n      var n = vertices.length,\n          i, j, indices, st, open, closed, edges, dx, dy, a, b, c;\n\n      /* Bail if there aren't enough vertices to form any triangles. */\n      if(n < 3)\n        return [];\n\n      /* Slice out the actual vertices from the passed objects. (Duplicate the\n       * array even if we don't, though, since we need to make a supertriangle\n       * later on!) */\n      vertices = vertices.slice(0);\n\n      if(key)\n        for(i = n; i--; )\n          vertices[i] = vertices[i][key];\n\n      /* Make an array of indices into the vertex array, sorted by the\n       * vertices' x-position. Force stable sorting by comparing indices if\n       * the x-positions are equal. */\n      indices = new Array(n);\n\n      for(i = n; i--; )\n        indices[i] = i;\n\n      indices.sort(function(i, j) {\n        var diff = vertices[j][0] - vertices[i][0];\n        return diff !== 0 ? diff : i - j;\n      });\n\n      /* Next, find the vertices of the supertriangle (which contains all other\n       * triangles), and append them onto the end of a (copy of) the vertex\n       * array. */\n      st = supertriangle(vertices);\n      vertices.push(st[0], st[1], st[2]);\n      \n      /* Initialize the open list (containing the supertriangle and nothing\n       * else) and the closed list (which is empty since we havn't processed\n       * any triangles yet). */\n      open   = [circumcircle(vertices, n + 0, n + 1, n + 2)];\n      closed = [];\n      edges  = [];\n\n      /* Incrementally add each vertex to the mesh. */\n      for(i = indices.length; i--; edges.length = 0) {\n        c = indices[i];\n\n        /* For each open triangle, check to see if the current point is\n         * inside it's circumcircle. If it is, remove the triangle and add\n         * it's edges to an edge list. */\n        for(j = open.length; j--; ) {\n          /* If this point is to the right of this triangle's circumcircle,\n           * then this triangle should never get checked again. Remove it\n           * from the open list, add it to the closed list, and skip. */\n          dx = vertices[c][0] - open[j].x;\n          if(dx > 0.0 && dx * dx > open[j].r) {\n            closed.push(open[j]);\n            open.splice(j, 1);\n            continue;\n          }\n\n          /* If we're outside the circumcircle, skip this triangle. */\n          dy = vertices[c][1] - open[j].y;\n          if(dx * dx + dy * dy - open[j].r > EPSILON)\n            continue;\n\n          /* Remove the triangle and add it's edges to the edge list. */\n          edges.push(\n            open[j].i, open[j].j,\n            open[j].j, open[j].k,\n            open[j].k, open[j].i\n          );\n          open.splice(j, 1);\n        }\n\n        /* Remove any doubled edges. */\n        dedup(edges);\n\n        /* Add a new triangle for each edge. */\n        for(j = edges.length; j; ) {\n          b = edges[--j];\n          a = edges[--j];\n          open.push(circumcircle(vertices, a, b, c));\n        }\n      }\n\n      /* Copy any remaining open triangles to the closed list, and then\n       * remove any triangles that share a vertex with the supertriangle,\n       * building a list of triplets that represent triangles. */\n      for(i = open.length; i--; )\n        closed.push(open[i]);\n      open.length = 0;\n\n      for(i = closed.length; i--; )\n        if(closed[i].i < n && closed[i].j < n && closed[i].k < n)\n          open.push(closed[i].i, closed[i].j, closed[i].k);\n\n      /* Yay, we're done! */\n      return open;\n    },\n    contains: function(tri, p) {\n      /* Bounding box test first, for quick rejections. */\n      if((p[0] < tri[0][0] && p[0] < tri[1][0] && p[0] < tri[2][0]) ||\n         (p[0] > tri[0][0] && p[0] > tri[1][0] && p[0] > tri[2][0]) ||\n         (p[1] < tri[0][1] && p[1] < tri[1][1] && p[1] < tri[2][1]) ||\n         (p[1] > tri[0][1] && p[1] > tri[1][1] && p[1] > tri[2][1]))\n        return null;\n\n      var a = tri[1][0] - tri[0][0],\n          b = tri[2][0] - tri[0][0],\n          c = tri[1][1] - tri[0][1],\n          d = tri[2][1] - tri[0][1],\n          i = a * d - b * c;\n\n      /* Degenerate tri. */\n      if(i === 0.0)\n        return null;\n\n      var u = (d * (p[0] - tri[0][0]) - b * (p[1] - tri[0][1])) / i,\n          v = (a * (p[1] - tri[0][1]) - c * (p[0] - tri[0][0])) / i;\n\n      /* If we're outside the tri, fail. */\n      if(u < 0.0 || v < 0.0 || (u + v) > 1.0)\n        return null;\n\n      return [u, v];\n    }\n  };\n\n  if(typeof module !== \"undefined\")\n    module.exports = Delaunay;\n})();","import React from \"react\";\nimport { Accordion, Nav } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\n\n/**\n * Represents the sublist of the Map Generation heading\n */\nexport default class SubMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  //sets the parent active and the child not active\n  toggleParentHover = () => {\n    this.setState({\n      childHover: false,\n      parentHover: !this.state.parentHover\n    })\n  }\n\n  //sets the child active and the parent not active\n  toggleChildHover = () => {\n    this.setState({\n      parentHover: false,\n      childHover: !this.state.childHover\n    })\n  }\n  \n  //renders the actual list\n  render() {\n    const { icon, title, items } = this.props;\n\n    return (\n      <Nav.Item className={classNames({ open: !this.state.collapsed })}>\n        <Accordion>\n          <Accordion.Toggle\n            as={Nav.Link}\n            variant=\"link\"\n            eventKey=\"0\"\n            onClick={this.toggleNavbar}\n            onMouseEnter={this.toggleParentHover}\n            onMouseLeave={this.toggleParentHover}\n            className={this.state.parentHover ? \"hovered\" : \"\"}\n          >\n            <FontAwesomeIcon icon={icon} className=\"mr-2\" />\n            {title}\n            <FontAwesomeIcon\n              icon={this.state.collapsed ? faCaretDown : faCaretUp}\n              className=\"float-right\"\n            />\n          </Accordion.Toggle>\n\n          <Accordion.Collapse eventKey=\"0\">\n            <nav className=\"nav flex-column\">\n              {items.map(item => (\n                <div className={this.state.childHover ? \"hovered\" : \"\"}>\n                  <a\n                    className={`nav-link nav-item pl-5 ${\n                      item === \"Active\" ? \"active\" : \"\"\n                    } `}\n                    href=\"/\"\n                    key={item}\n                    onMouseEnter={this.toggleChildHover}\n                    onMouseLeave={this.toggleChildHover}\n                  >\n                    {item}\n                  </a>\n                </div>\n              ))}\n            </nav>\n          </Accordion.Collapse>\n        </Accordion>\n      </Nav.Item>\n    );\n  }\n}","import React from 'react';\nimport { Nav, Button } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport SubMenu from \"./SubMenu\"\nimport \"./SideBar.css\";\n\n/**\n * Represents the two sidebar components of the webpage\n */\nexport default class SideBar extends React.Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        isOpen: false,\n        isMobile: true,\n      }\n\n      this.previousWidth = -1;\n    }\n\n    //updates the width of the sidebar based on dimensions of screen\n    //hides it on mobile\n    updateWidth() {\n      const width = window.innerWidth;\n      const mobileLimit = 576;\n      \n      const isMobile = width <= mobileLimit;\n      const wasMobile = this.previousWidth <= mobileLimit;\n\n      if (isMobile !== wasMobile) {\n        this.setState({\n          isOpen: !isMobile\n        });\n      }\n    }\n\n    componentDidMount() {\n      this.updateWidth();\n      window.addEventListener(\"resize\", this.updateWidth.bind(this));\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateWidth.bind(this));\n    }\n\n    //renders the actual sidebar\n    render() {\n      return (\n        <div className={classNames(\"sidebar\", { \"is-open\": this.state.isOpen })}>\n          <div className=\"sidebar-header\">\n            <h3>Procedural Generation</h3>\n          </div>\n          <Nav className=\"flex-column pt-2\">\n            <p className=\"ml-3\">Algorithms</p>\n  \n            <SubMenu\n              title=\"Map Generation\"\n              items={[\"Tinykeep\"]}\n            />\n\n            {/* <SubMenu\n              title=\"Sequence Generation\"\n              items={[]}\n            />\n\n            <SubMenu\n              title=\"Ontogenetic\"\n              items={[]}\n            />\n\n            <SubMenu\n              title=\"Teleological\"\n              items={[]}\n            /> */}\n            <p className=\"ml-3 footer\">\n              By: Jared Paul\n            </p>\n          </Nav>\n        </div>\n      );  \n    }\n}","import React from 'react';\nimport { Nav, Button, Row, Col, Form } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport \"../../../components/sidebar/SideBar.css\";\n\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\n/**\n * Represents the options sidebar for the tinykeep algorithm\n */\nexport default class TinyKeepOptions extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.handleRoomWidthChange = this.handleRoomWidthChange.bind(this);\n      this.handleRoomHeightChange = this.handleRoomHeightChange.bind(this);\n      this.handleStdDeviationChange = this.handleStdDeviationChange.bind(this);\n      this.handleRadiusChange = this.handleRadiusChange.bind(this);\n      this.handleRoomAmountChange = this.handleRoomAmountChange.bind(this);\n      this.handleSpeedChange = this.handleSpeedChange.bind(this);\n      this.handleVisualizeButtonClick = this.handleVisualizeButtonClick.bind(this);\n\n      this.state = {\n        isOpen: false,\n        isMobile: true,\n      }\n\n      this.previousWidth = -1;\n    }\n\n    //updates the width of the sidebar based on dimensions of screen\n    //hides it on mobile\n    updateWidth() {\n      const width = window.innerWidth;\n      const mobileLimit = 576;\n      \n      const isMobile = width <= mobileLimit;\n      const wasMobile = this.previousWidth <= mobileLimit;\n\n      if (isMobile !== wasMobile) {\n        this.setState({\n          isOpen: !isMobile\n        });\n      }\n    }\n\n    componentDidMount() {\n      this.updateWidth();\n      window.addEventListener(\"resize\", this.updateWidth.bind(this));\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateWidth.bind(this));\n    }\n\n    //gets the current value of the slider for room width\n    //and sets the room width for the next visualization\n    handleRoomWidthChange(roomWidth) {\n      this.props.onRoomWidthChange(roomWidth);\n    }\n\n    //gets the current value of the slider for room height\n    //and sets the room height for the next visualization\n    handleRoomHeightChange(roomHeight) {\n      this.props.onRoomHeightChange(roomHeight);\n    }\n\n    //gets the current value of the slider for standard deviation\n    //and sets the standard deviation for the next visualization\n    handleStdDeviationChange(stdDeviation) {\n      this.props.onStdDeviationChange(stdDeviation);\n    }\n\n    //gets the current value of the slider for spawn radius\n    //and sets the radius for the next visualization\n    handleRadiusChange(radius) {\n      this.props.onRadiusChange(radius);\n    }\n\n    //gets the current value of the slider for room amount\n    //and sets the room amount for the next visualization\n    handleRoomAmountChange(roomAmount) {\n      this.props.onRoomAmountChange(roomAmount);\n    }\n\n    //gets the current value of the slider for simulation speed\n    //and sets the speed for the next visualization\n    handleSpeedChange(speed) {\n      this.props.onSpeedChange(speed);\n    }\n\n    //resets and starts the next visualization\n    handleVisualizeButtonClick() {\n      this.props.onVisualizeButtonClick();\n    }\n\n    //renders the actual options sidebar associated with the tinykeep algorithm\n    render() {\n      let roomWidth = Number.parseFloat(this.props.roomWidth);\n      let roomHeight = Number.parseFloat(this.props.roomHeight);\n      let stdDeviation = Number.parseFloat(this.props.stdDeviation);\n      let radius = Number.parseFloat(this.props.radius);\n      let roomAmount = Number.parseFloat(this.props.roomAmount);\n      let speed = Number.parseFloat(this.props.speed);\n\n      return (\n        <div className={classNames(\"options-sidebar\", { \"is-open\": this.state.isOpen })}>\n          <div className=\"sidebar-header\">\n            <Button\n              variant=\"link\"\n              onClick={this.props.toggle}\n              style={{ color: \"#fff\" }}\n              className=\"mt-4\"\n            >\n            </Button>\n            <h3 style={{textAlign: \"center\"}}>TinyKeep Options</h3>\n          </div>\n          <div>\n            <Form> \n              <Form.Group as={Row}>\n                <Form.Label column sm='5' style={{paddingLeft: '30px'}}>\n                  Room Width\n                </Form.Label>\n                <Col sm='5'>\n                  <RangeSlider\n                    value={roomWidth}\n                    onChange={e => this.handleRoomWidthChange(e.target.value)}\n                    tooltip='off'\n                  />\n                </Col>\n                <Form.Label column sm='1' style={{paddingLeft: '0px'}}>\n                  {roomWidth}\n                </Form.Label>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Form.Label column sm='5' style={{paddingLeft: '30px'}}>\n                  Room Height\n                </Form.Label>\n                <Col sm='5'>\n                  <RangeSlider\n                    value={roomHeight}\n                    onChange={e => this.handleRoomHeightChange(e.target.value)}\n                    tooltip='off'\n                  />\n                </Col>\n                <Form.Label column sm='1' style={{paddingLeft: '0px'}}>\n                  {roomHeight}\n                </Form.Label>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Form.Label column sm='5' style={{paddingLeft: '30px'}}>\n                  Standard Deviation\n                </Form.Label>\n                <Col sm='5'>\n                  <RangeSlider\n                    value={stdDeviation}\n                    onChange={e => this.handleStdDeviationChange(e.target.value)}\n                    tooltip='off'\n                  />\n                </Col>\n                <Form.Label column sm='1' style={{paddingLeft: '0px'}}>\n                  {stdDeviation}\n                </Form.Label>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Form.Label column sm='5' style={{paddingLeft: '30px'}}>\n                  Spawn Radius\n                </Form.Label>\n                <Col sm='5'>\n                  <RangeSlider\n                    value={radius}\n                    onChange={e => this.handleRadiusChange(e.target.value)}\n                    tooltip='off'\n                  />\n                </Col>\n                <Form.Label column sm='1' style={{paddingLeft: '0px'}}>\n                  {radius}\n                </Form.Label>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Form.Label column sm='5' style={{paddingLeft: '30px'}}>\n                  Room Amount\n                </Form.Label>\n                <Col sm='5'>\n                  <RangeSlider\n                    value={roomAmount}\n                    onChange={e => this.handleRoomAmountChange(e.target.value)}\n                    tooltip='off'\n                    max={50}\n                  />\n                </Col>\n                <Form.Label column sm='1' style={{paddingLeft: '0px'}}>\n                  {roomAmount}\n                </Form.Label>\n              </Form.Group>\n              <Form.Group as={Row}>\n                <Form.Label column sm='5' style={{paddingLeft: '30px'}}>\n                  Simulation Speed\n                </Form.Label>\n                <Col sm='5'>\n                  <RangeSlider\n                    value={speed}\n                    onChange={e => this.handleSpeedChange(e.target.value)}\n                    tooltip='off'\n                    max={2}\n                    step={0.1}\n                  />\n                </Col>\n                <Form.Label column sm='1' style={{paddingLeft: '0px'}}>\n                  {speed}\n                </Form.Label>\n              </Form.Group>\n            </Form>\n            <div className=\"text-center\">\n              <Button \n                className=\"visualize-button\"\n                onClick={this.handleVisualizeButtonClick}\n              >\n                Visualize\n              </Button>\n            </div>\n          </div>\n        </div>\n      );  \n    }\n}","/**\n * Adapted from https://github.com/liabru/matter-js/blob/master/src/render/Render.js\n * Author: liabru\n */\n\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nimport Matter from 'matter-js';\n\nvar CustomRender = {};\n\nexport default CustomRender;\n\nvar Common = Matter.Common;\nvar Composite = Matter.Composite;\nvar Bounds = Matter.Bounds;\nvar Events = Matter.Events;\nvar Grid = Matter.Grid;\nvar Vector = Matter.Vector;\nvar Mouse = Matter.Mouse;\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    CustomRender.create = function(options) {\n        var defaults = {\n            controller: CustomRender,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            CustomRender.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('CustomRender.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    CustomRender.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            CustomRender.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    CustomRender.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    CustomRender.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    CustomRender.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    CustomRender.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.setTransform(\n            render.options.pixelRatio / boundsScaleX, 0, 0, \n            render.options.pixelRatio / boundsScaleY, 0, 0\n        );\n        \n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    CustomRender.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    CustomRender.clear = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            CustomRender.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            CustomRender.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                CustomRender.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            CustomRender.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            CustomRender.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            CustomRender.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            CustomRender.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            CustomRender.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            CustomRender.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            CustomRender.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            CustomRender.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            CustomRender.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            CustomRender.mousePosition(render, render.mouse, context);\n\n        CustomRender.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            CustomRender.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            CustomRender.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            CustomRender.endViewTransform(render);\n        }\n    }\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    CustomRender.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            CustomRender.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.options.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.options.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n\n            if (render.options.pixelRatio !== 1) {\n                render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n            }\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            CustomRender.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                CustomRender.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            CustomRender.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            CustomRender.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            CustomRender.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            CustomRender.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            CustomRender.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            CustomRender.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            CustomRender.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            CustomRender.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            CustomRender.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            CustomRender.mousePosition(render, render.mouse, context);\n\n        CustomRender.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            CustomRender.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            CustomRender.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            CustomRender.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    CustomRender.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n            // @if DEBUG\n            if (metrics.extended) {\n                if (metrics.timing) {\n                    text += \"delta: \" + metrics.timing.delta.toFixed(3) + space;\n                    text += \"correction: \" + metrics.timing.correction.toFixed(3) + space;\n                }\n\n                text += \"bodies: \" + bodies.length + space;\n\n                if (engine.broadphase.controller === Grid)\n                    text += \"buckets: \" + metrics.buckets + space;\n\n                text += \"\\n\";\n\n                text += \"collisions: \" + metrics.collisions + space;\n                text += \"pairs: \" + engine.pairs.list.length + space;\n                text += \"broad: \" + metrics.broadEff + space;\n                text += \"mid: \" + metrics.midEff + space;\n                text += \"narrow: \" + metrics.narrowEff + space;\n            }\n            // @endif\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    CustomRender.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    CustomRender.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                            (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    CustomRender.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    CustomRender.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    CustomRender.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    CustomRender.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                grid.bucketWidth,\n                grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    CustomRender.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                    Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.style.height = '100%';\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();","\nexport function getRandomPointInCircle(radius) {\n    radius = radius == 0 ? 1 : radius;\n\n    let t = 2 * Math.PI * Math.random();\n    let u = Math.random() + Math.random();\n    let r;\n\n    if (u > 1) {\n        r = 2 - u;\n    } else {\n        r = u;\n    }\n\n    return [Math.round(radius * r * Math.cos(t)), Math.round(radius * r * Math.sin(t))];\n}\n\nexport function normalDistribution(x) {\n    return Math.pow(Math.E,-Math.pow(x,2)/2)/Math.sqrt(2*Math.PI);\n}\n\nexport default { getRandomPointInCircle, normalDistribution }","import Matter from \"matter-js\";\nimport physics from \"../../../physics/physics\"\nimport kruskal from '../../../physics/kruskal';\nvar Delaunay = require('../../../physics/delaunay');\n\n/**\n * Represents all the steps associated with the tinykeep algorithm\n */\n\n //exports the dungeon created by the algorithm\nexport default function tinyKeep(physicsWorld, roomAmount, roomWidth, roomHeight, stdDeviation, radius, width, height) {\n    roomAmount = Number.parseFloat(roomAmount);\n    roomWidth = Number.parseFloat(roomWidth);\n    roomHeight = Number.parseFloat(roomHeight);\n    stdDeviation = Number.parseFloat(stdDeviation);\n    radius = Number.parseFloat(radius);\n\n    let rooms = generateRooms(physicsWorld, roomAmount, roomWidth, roomHeight, stdDeviation, radius, width, height);\n    let areaThreshold = getAreaThreshold(rooms);\n    let mainRooms = getMainRooms(rooms, areaThreshold);\n    \n    let centerPoints = getCenterPoints(mainRooms);\n    let triangles = Delaunay.triangulate(centerPoints);\n    let triangleEdges = getEdgesFromTriangulation(triangles);\n    let minimumSpanningTree = kruskal(centerPoints, triangleEdges, metric_dist);\n\n    return {\n      rooms: rooms,\n      mainRooms: mainRooms,\n      triangles: triangles,\n      triangleEdges: triangleEdges,\n      minimumSpanningTree: minimumSpanningTree,\n    }\n}\n\n//generates all the rooms in the dungeon\nfunction generateRooms(physicsWorld, amount, roomWidth, roomHeight, stdDeviation, radius, canvasWidth, canvasHeight) {\n    let rooms = [];\n\n    for (let i = 0; i < amount; i++) {\n        let room = generateRoom(physicsWorld, roomWidth, roomHeight, stdDeviation, radius, canvasWidth, canvasHeight);\n        rooms.push(room);\n    }\n\n    return rooms;\n}\n\n//generates a single room and adds it to the physics world\nfunction generateRoom(physicsWorld, roomWidth, roomHeight, stdDeviation, radius, canvasWidth, canvasHeight) {\n    let position = physics.getRandomPointInCircle(radius);\n    let width = 40 + Math.round(Math.random() * (roomWidth + stdDeviation));\n    let height = 40 + Math.round(Math.random() * (roomHeight + stdDeviation));\n\n    let roomBody = Matter.Bodies.rectangle(position[0] + canvasWidth / 2, position[1] + canvasHeight / 2, width, height);\n    roomBody.sleepThreshold = 120;\n    Matter.World.addBody(physicsWorld, roomBody);\n\n    let room = {\n        x: position[0],\n        y: position[1],\n        width: width,\n        height: height,\n        area: width * height,\n        body: roomBody\n    }\n\n    return room;\n} \n\n//calculates the distance between two points\nfunction metric_dist( a, b )\n{\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  return dx*dx + dy*dy;\n}\n\n//gets the area threshold for rooms to become main rooms\nfunction getAreaThreshold(rooms) {\n    let areaThreshold = 0;\n\n    rooms.forEach((room) => {\n        areaThreshold += room.area;\n    })\n\n    return areaThreshold / rooms.length;\n}\n\n//returns all of the main rooms out of the rooms based on the area threshold\nfunction getMainRooms(rooms, areaThreshold) {\n    let selectedRooms = [];\n\n    rooms.forEach((room) => {\n        if (room.area >= areaThreshold) {\n            selectedRooms.push(room);\n        }\n    });\n\n    return selectedRooms;\n}\n\n//returns the centerpoints of the rooms (always the main rooms) given\nfunction getCenterPoints(mainRooms) {\n    let centerPoints = [];\n\n    mainRooms.forEach((room) => {\n        centerPoints.push([room.body.position.x, room.body.position.y]);\n    })\n\n    return centerPoints;\n}\n\n//returns all the triangle edges from the delaunay triangulation\nfunction getEdgesFromTriangulation(triangles) {\n    let edges = [];\n\n    for (let i = triangles.length; i;) {\n      --i;\n      var c = triangles[i];\n      --i;\n      var b = triangles[i];\n      --i;\n      var a = triangles[i];\n  \n      edges.push([a, b]);\n      edges.push([b, c]);\n      edges.push([c, a]);\n    }\n\n    return edges;\n}\n\n//returns all of the paths between the main rooms\nexport function getHallways(minimumSpanningTree, mainRooms) {\n  let hallways = []\n\n  for (let i = 0; i < minimumSpanningTree.length; i++) {\n    let edges = minimumSpanningTree[i];\n    let firstRoom = mainRooms[edges[0]];\n    let secondRoom = mainRooms[edges[1]];\n\n    let path = getPath(firstRoom, secondRoom);\n    hallways.push(path);\n  }\n\n  return hallways;\n}\n\n//returns the intersecting rooms based on the minimum spanning tree\nexport function getIntersectingRooms(minimumSpanningTree, mainRooms, rooms) {\n    let intersectingRooms = [];\n\n    for (let i = 0; i < minimumSpanningTree.length; i++) {\n        let edge = minimumSpanningTree[i];\n        let firstRoom = mainRooms[edge[0]];\n        let secondRoom = mainRooms[edge[1]];\n\n        let path = getPath(firstRoom, secondRoom);\n        let intersections = getIntersectionsAlongPath(path, mainRooms, rooms);\n        intersections.forEach((room) => {\n          intersectingRooms.push(room);\n        })\n    }\n\n    return intersectingRooms;\n}\n\n//gets all of the intersecting rooms along a path\nfunction getIntersectionsAlongPath(path, mainRooms, rooms) {\n    let intersections = [];\n\n    path.forEach((point) => {\n        let room = getRoom(point[0], point[1], rooms);\n        if (room !== null && !intersections.includes(room) && !mainRooms.includes(room)) {\n            intersections.push(room);\n        }\n    })\n\n    return intersections;\n}\n\n//deterministic way to determine the path between two rooms\nfunction getPath(firstRoom, secondRoom) {\n    let points = [];\n\n    let yMin = Math.min(firstRoom.body.position.y, secondRoom.body.position.y);\n    let yMax = Math.max(firstRoom.body.position.y, secondRoom.body.position.y);\n\n    let xMin = Math.min(firstRoom.body.position.x, secondRoom.body.position.x);\n    let xMax = Math.max(firstRoom.body.position.x, secondRoom.body.position.x);\n\n    if (Math.random()) {\n      for (let x = xMin; x < xMax; x++) {\n        points.push([x, firstRoom.body.position.y]);\n      }\n\n      for (let y = yMin; y < yMax; y++) {\n        points.push([secondRoom.body.position.x, y])\n      }\n    } else {\n      for (let y = yMin; y < yMax; y++) {\n        points.push([secondRoom.body.position.x, y])\n      }\n\n      for (let x = xMin; x < xMax; x++) {\n        points.push([x, firstRoom.body.position.y]);\n      }\n    }\n\n    return points;\n}\n\n//returns a room if found at the point given, null if not found\nexport function getRoom(x, y, rooms) {\n    for (const room of rooms) {\n      if (Matter.Vertices.contains(room.body.vertices, { x: x, y: y })) {\n        return room;\n      }\n    }\n\n    return null;\n}","/**\n * Adapted from: https://github.com/abetusk/kruskal.js\n */\n\nimport UnionFind from './union-find';\n\nexport default function kruskal( vertices, edges, metric ) { \n  var set = {};\n\n  var finalEdge = [];\n\n  var forest = new UnionFind( vertices.length );\n\n  var edgeDist = [];\n  for (var ind in edges)\n  {\n    var u = edges[ind][0];\n    var v = edges[ind][1];\n    var e = { edge: edges[ind], weight: metric( vertices[u], vertices[v] ) };\n    edgeDist.push(e);\n  }\n\n  edgeDist.sort( function(a, b) { return a.weight- b.weight; } );\n\n  for (var i=0; i<edgeDist.length; i++)\n  {\n    var u = edgeDist[i].edge[0];\n    var v = edgeDist[i].edge[1];\n\n    if ( forest.find(u) != forest.find(v) )\n    {\n      finalEdge.push( [ u, v ] );\n      forest.link( u, v );\n    }\n  }\n\n  return finalEdge;\n\n}","/**\n * Represents the steps in the tinykeep algorithm\n */\nexport const steps = {\n    RESET: \"reset\",\n    SEPARATING_BODIES: \"separatingBodies\",\n    MAIN_ROOMS: \"mainRooms\",\n    TRIANGULATION: \"triangulation\",\n    MINIMUM_SPANNING_TREE: \"minimumSpanningTree\",\n    HALLWAYS: \"hallways\",\n    INTERSECTING_ROOMS: \"intersectingRooms\",\n    HALLWAYS_IMMEDIATE: \"hallwaysImmediate\",\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Matter, { Events, Composite } from \"matter-js\";\nimport CustomRender from '../../../physics/CustomRender';\n\nimport tinykeep, { getIntersectingRooms, getHallways, getRoom } from \"./TinykeepAlgorithm\"\n\nimport Promise from 'bluebird';\n\nimport { steps } from './TinyKeepConstants';\n\n/**\n * Represents the actual tinykeep algorithm visualization\n */\nclass TinyKeep extends React.Component {\n  constructor(props) {\n    super(props);\n\n    Promise.config({\n      cancellation: true\n    })\n\n    this.promises = [];\n  }\n\n  //creates all objects shared between each visualization\n  //starts the visualization if it's the first time rendering\n  componentDidMount() {\n    this.engine = Matter.Engine.create({\n      positionIterations: 10,\n      enableSleeping: true\n    });\n    this.engine.world.gravity.y = 0;\n    this.engine.timing.timeScale = 0.1;\n\n    this.customRender = CustomRender.create({\n      element: this.refs.scene,\n      engine: this.engine,\n      options: {\n        showSleeping: false,\n        width: window.innerWidth - 615,\n        height: window.innerHeight - 20,\n        wireframes: false\n      }\n    });\n\n    Matter.Engine.run(this.engine);\n    CustomRender.run(this.customRender);\n\n    let roomWidth = this.props.roomWidth;\n    let roomHeight = this.props.roomHeight\n    let stdDeviation = this.props.stdDeviation;\n    let radius = this.props.radius;\n    let roomAmount = this.props.roomAmount;\n    let speed = this.props.speed;\n    let step = this.props.step;\n\n    this.tinyKeepContext = tinykeep(this.engine.world, roomAmount, roomWidth, roomHeight, stdDeviation, radius, this.customRender.options.width, this.customRender.options.height);\n\n    this.draw(this.tinyKeepContext, this.customRender, step);\n  }\n\n  //resets and starts the next visualization on update\n  componentDidUpdate(prevProps) {\n    if (this.props.reset === true) {\n      this.props.onReset(); //calls back to set reset state back to false\n    }\n    if (prevProps.step !== this.props.step) {\n      this.draw(this.tinyKeepContext, this.customRender, this.props.step); //if we are behind a step, let's render the current one\n    }\n  }\n\n  //clears the canvas and physics world\n  clearWorld(engine) {\n    Matter.World.clear(engine.world);\n    Matter.Engine.clear(engine);\n  }\n\n  //returns the current step of the algorithm\n  getStep(step) {\n    return steps[Object.keys(steps)[step]];\n  }\n\n  //increments the current step to render the next step\n  incrementStep() {\n    this.props.incrementStep();\n  }\n\n  //draws the current step onto the canvas\n  draw(tinyKeepContext, render, step) {\n    let engine = render.engine;\n    let world = engine.world;\n    let canvasContext = render.context;\n\n    let bodies = Matter.Composite.allBodies(world);\n\n    let rooms = tinyKeepContext.rooms;\n    let mainRooms = tinyKeepContext.mainRooms;\n    let triangles = tinyKeepContext.triangles;\n    let triangleEdges = tinyKeepContext.triangleEdges;\n    let minimumSpanningTree = tinyKeepContext.minimumSpanningTree;\n\n    let roomWidth = this.props.roomWidth;\n    let roomHeight = this.props.roomHeight\n    let stdDeviation = this.props.stdDeviation;\n    let radius = this.props.radius; //spawn radius\n    let roomAmount = this.props.roomAmount;\n    let speed = this.props.speed; //visualization speed\n\n    let delay = 0;\n\n    let stepString = this.getStep(step);\n    if (stepString === steps.RESET) { //resets the current world and canvas\n      Events.off(render);\n      while (this.promises.length) { //cancels all currently scheduled tasks associated with the previous visualization\n        this.promises.pop().cancel();\n      }\n      this.clearWorld(engine);\n      CustomRender.stop(render);\n      CustomRender.run(render); //restart the renderer\n      \n      //generates a new dungeon based on the algorithm\n      this.tinyKeepContext = tinykeep(world, roomAmount, roomWidth, roomHeight, stdDeviation, radius, this.customRender.options.width, this.customRender.options.height);\n      this.incrementStep();\n    } else {\n      switch (stepString) {\n        case steps.SEPARATING_BODIES:\n          let secondRun = false;\n\n          //calls everytime the render is finished rendering the current frame\n          Matter.Events.on(render, \"afterRender\", (event) => {\n            let world = engine.world;\n            let bodies = Composite.allBodies(world);\n            let sleeping = bodies.filter((body) => body.isSleeping);\n            let isWorldSleeping = bodies.length === sleeping.length;\n    \n            //once all of the bodies are separated from each other\n            if (isWorldSleeping && secondRun === false) {\n              secondRun = true;\n              this.incrementStep();\n            }\n          });\n          break;\n        case steps.MAIN_ROOMS:\n          delay = this.drawMainRooms(speed, mainRooms, 'white');\n\n          //after a delay based on speed, go to the next step\n          this.sleep(delay / speed).then(() => {\n            this.promises.shift(); //deletes this promise since it's done\n\n            this.incrementStep(); \n          })\n          break;\n        case steps.TRIANGULATION:\n          CustomRender.stop(render); //steps the render because we need to draw on the canvas\n          delay = this.drawTriangulation(speed, canvasContext, triangles, mainRooms);\n\n          this.sleep(delay / speed).then(() => {\n            this.promises.shift();\n\n            this.incrementStep();\n          })\n          break;\n        case steps.MINIMUM_SPANNING_TREE:\n          CustomRender.clear(render); //clears the triangulation, but keeps the rooms\n          delay = this.drawMinimumSpanningTree(speed, canvasContext, minimumSpanningTree, mainRooms);\n\n          this.sleep(delay / speed).then(() => {\n            this.promises.shift();\n\n            this.incrementStep();\n          })\n          break;\n        case steps.HALLWAYS:\n          CustomRender.clear(render); //clears the triangulation, but keeps the rooms\n          delay = this.drawHallways(speed, canvasContext, minimumSpanningTree, mainRooms, rooms);\n\n          this.sleep(delay / speed).then(() => {\n            this.promises.shift();\n\n            this.incrementStep();\n          })\n          break;\n        case steps.INTERSECTING_ROOMS:\n          //gets the intersecting rooms after they are all separated by the physics engine\n          let intersectingRooms = getIntersectingRooms(minimumSpanningTree, mainRooms, rooms); \n          delay = this.drawIntersectingRooms(intersectingRooms, 'blue');\n\n          //for each room not included in the dungeon, hide them\n          rooms.forEach((room) => {\n            if (!intersectingRooms.includes(room) && !mainRooms.includes(room)) {\n              room.body.render.visible = false;\n            }\n          })\n\n          //redraw the hallways and bodies to make sure we only have what we need\n          CustomRender.clear(render);\n          this.drawHallwaysImmediate(canvasContext, minimumSpanningTree, mainRooms, rooms);\n          CustomRender.bodies(render, bodies, canvasContext);\n\n          this.sleep(delay / speed).then(() => {\n            this.promises.shift();\n\n            this.incrementStep();\n          })\n          break;\n      }\n    }\n  }\n\n  //visualizes the main rooms in the dungeon\n  drawMainRooms(speed, mainRooms, colour) {\n    let delay = 0;\n\n    for (let room of mainRooms) {\n      this.sleep(delay / speed).then(() => {\n        this.promises.shift();\n\n        room.body.render.fillStyle = colour;\n      })\n      delay += 250\n    }\n\n    return delay;\n  }\n\n  //draws the triangles connecting each main room together\n  drawTriangulation(speed, context, triangles, mainRooms) {\n    let delay = 0;\n\n    let i = triangles.length;\n    while (i > 0)\n    {\n      let path = new Path2D();\n\n      i--;\n      let firstRoom = mainRooms[triangles[i]];\n      path.moveTo(firstRoom.body.position.x, firstRoom.body.position.y);\n      \n      i--;\n      let secondRoom = mainRooms[triangles[i]];\n      path.lineTo(secondRoom.body.position.x, secondRoom.body.position.y);\n\n      i--;\n      let thirdRoom = mainRooms[triangles[i]];\n      path.lineTo(thirdRoom.body.position.x, thirdRoom.body.position.y);\n\n      path.closePath();\n\n      this.sleep(delay / speed).then(() => {        \n        this.promises.shift();\n\n        context.strokeStyle = 'black';\n        context.stroke(path);\n      });\n\n      delay += 250;\n    }\n    \n    return delay;\n  }\n\n  //draws the minimum connecting tree connecting all main rooms\n  drawMinimumSpanningTree(speed, canvasContext, minimumSpanningTree, mainRooms) {\n    let delay = 0;\n\n    for (let i = 0; i < minimumSpanningTree.length; i++) {\n      let edges = minimumSpanningTree[i];\n      let firstRoom = mainRooms[edges[0]];\n      let secondRoom = mainRooms[edges[1]];\n\n      let path = new Path2D();\n      path.moveTo(firstRoom.body.position.x, firstRoom.body.position.y);\n      path.lineTo(secondRoom.body.position.x, secondRoom.body.position.y);\n      path.closePath();\n\n      this.sleep(delay / speed).then(() => {\n        this.promises.shift();\n\n        canvasContext.strokeStyle = 'red';\n        canvasContext.stroke(path); \n      });\n\n      delay += 250;\n    }\n\n    return delay;\n  }\n\n  //draws all of the hallways immediately (no draw delay)\n  drawHallwaysImmediate(canvasContext, minimumSpanningTree, mainRooms, rooms) {\n    getHallways(minimumSpanningTree, mainRooms).forEach((hallway) => {\n      this.drawHallway(canvasContext, hallway, rooms, mainRooms);\n    });\n  }\n\n  //draws all of the hallways connecting the rooms together \n  drawHallways(speed, canvasContext, minimumSpanningTree, mainRooms, rooms) {\n    let delay = 0;\n\n    getHallways(minimumSpanningTree, mainRooms).forEach((hallway) => {\n      this.sleep(delay / speed).then(() => {\n        this.promises.shift();\n\n        this.drawHallway(canvasContext, hallway, rooms, mainRooms);\n      });\n\n      delay += 250;\n    });\n\n    return delay;\n  }\n\n  //draws a path onto the canvas\n  drawHallway(canvasContext, path, rooms) {\n    path.forEach((point) => {\n      let x = point[0];\n      let y = point[1];\n\n      let room = getRoom(x, y, rooms);\n      if (room === null) {\n        canvasContext.fillStyle = 'orange';\n        canvasContext.fillRect(x, y, 6, 6);\n      }\n    });\n  }\n\n  //visualizes the intersecting rooms that were found based on the hallways\n  //can't be main rooms\n  drawIntersectingRooms(intersectingRooms, colour) {\n    intersectingRooms.forEach((room) => {\n      room.body.render.fillStyle = colour;\n    });\n  }\n\n  //delays the drawing for a time\n  sleep(time) {\n    let promise = new Promise((resolve) => setTimeout(resolve, time));\n    this.promises.push(promise);\n    return promise;\n  }\n\n  render() {\n    return <div ref=\"scene\"/>;\n  }\n}\n\nexport default TinyKeep;","import React from 'react';\n\nimport SideBar from '../../../components/sidebar/SideBar'\nimport TinyKeepOptions from './TinyKeepOptions'\nimport TinyKeep from './TinyKeep'\n\nimport './TinyKeepVisualizer.css'\n\n/**\n * Represents the visualizing container for the options sidebar and the canvas\n */\nexport default class TinyKeepVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleRoomWidthChange = this.handleRoomWidthChange.bind(this);\n        this.handleRoomHeightChange = this.handleRoomHeightChange.bind(this);\n        this.handleStdDeviationChange = this.handleStdDeviationChange.bind(this);\n        this.handleRadiusChange = this.handleRadiusChange.bind(this);\n        this.handleRoomAmountChange = this.handleRoomAmountChange.bind(this);\n        this.handleSpeedChange = this.handleSpeedChange.bind(this);\n        this.handleVisualizeButtonClick = this.handleVisualizeButtonClick.bind(this);\n        this.handleStep = this.handleStep.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n\n        //sets the initial state on refresh\n        this.state = {\n            roomWidth: 40,\n            roomHeight: 40,\n            stdDeviation: 5,\n            radius: 40,\n            roomAmount: 15,\n            speed: 1,\n            step: 1,\n            reset: false,\n          }\n    }\n\n    //sets the room width for the next visualization\n    handleRoomWidthChange(roomWidth) {\n        this.setState({ roomWidth: roomWidth });\n    }\n\n    //sets the room height for the next visualization\n    handleRoomHeightChange(roomHeight) {\n        this.setState({ roomHeight: roomHeight });\n    }\n\n    //sets the standard deviation for the next visualization\n    handleStdDeviationChange(stdDeviation) {\n        this.setState({ stdDeviation: stdDeviation });\n    }\n  \n    //sets the radius for the next visualization\n    handleRadiusChange(radius) {\n        this.setState({ radius: radius });\n    }\n\n    //sets the room amount for the next visualization\n    handleRoomAmountChange(roomAmount) {\n        this.setState({ roomAmount: roomAmount });\n    }\n\n    //sets the speed for the next visualization\n    handleSpeedChange(speed) {\n        this.setState({ speed: speed });\n    }\n\n    //resets the canvas and starts the next visualization\n    handleVisualizeButtonClick() {\n        this.setState({ step: 0, reset: true });\n    }\n\n    //sets reset back to false so we don't keep resetting\n    handleReset() {\n        this.setState({ reset: false });\n    }\n\n    //steps through the visualization\n    handleStep() {\n        this.setState((prevState) => ({\n            step: prevState.step + 1\n        }));\n    }\n\n    //renders the actual visualization and sidebars\n    render() {\n        let roomWidth = this.state.roomWidth;\n        let roomHeight = this.state.roomHeight;\n        let stdDeviation = this.state.stdDeviation;\n        let radius = this.state.radius;\n        let roomAmount = this.state.roomAmount;\n        let speed = this.state.speed;\n        let step = this.state.step;\n        let reset = this.state.reset;\n\n        return (\n            <div className=\"TinyKeepVisualizer\">\n                <SideBar/>\n                <TinyKeep\n                    roomWidth={roomWidth}\n                    roomHeight={roomHeight}\n                    stdDeviation={stdDeviation}\n                    radius={radius}\n                    roomAmount={roomAmount}\n                    speed={speed}\n                    step={step}\n                    reset={reset}\n                    incrementStep={this.handleStep}\n                    onReset={this.handleReset}\n                    />\n                <TinyKeepOptions\n                    roomWidth={roomWidth}\n                    roomHeight={roomHeight}\n                    stdDeviation={stdDeviation}\n                    radius={radius}\n                    roomAmount={roomAmount}\n                    speed={speed}\n                    onRoomWidthChange={this.handleRoomWidthChange}\n                    onRoomHeightChange={this.handleRoomHeightChange}\n                    onStdDeviationChange={this.handleStdDeviationChange}\n                    onRadiusChange={this.handleRadiusChange}\n                    onRoomAmountChange={this.handleRoomAmountChange}\n                    onSpeedChange={this.handleSpeedChange}\n                    onVisualizeButtonClick={this.handleVisualizeButtonClick}\n                    />\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport TinyKeepVisualizer from './algorithms/map_generation/tinykeep/TinyKeepVisualizer';\n\nconst algorithms = {\n    mapGeneration: {\n        tinykeep: \"tinykeep\"\n    }\n}\n\nexport default class ProceduralGenerationVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            algorithm: algorithms.mapGeneration.tinykeep,\n\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                <TinyKeepVisualizer/>\n            </div>\n          );\n    }\n}","import React from 'react';\nimport './App.css';\n\nimport ProceduralGenerationVisualizer from './ProceduralGenerationVisualizer';\n\n/**\n * The main component that React renders\n */\nfunction App() {\n  return (\n    <div className=\"App wrapper\">\n      <ProceduralGenerationVisualizer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}